name: Code Quality
on: pull_request
jobs:
  reusable_workflow:
    name: Reused it!
    uses: abclay/reusable_workflows/.github/workflows/python_code_quality.yml@main
    with:
      python-version: 3.7
  # lint-python:
  #   name: Run python linters
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout the code
  #     - name: Checkout Code
  #       uses: actions/checkout@v2
  #     # Setup the reviewdog app
  #     - uses: reviewdog/action-setup@v1
  #       with:
  #         reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]
  #     # Install any linters we will use
  #     - name: Install linters
  #       run: |
  #         pip install flake8
  #     - name: Run linters
  #       env:
  #         REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         reviewdog -reporter="github-pr-review" -runners="flake8" -tee
  # black-format:
  #   name: Check formatting
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9
  #     - run: |
  #         pip install black
  #         black --check .
  # run-pytest:
  #   name: Run pytest
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         # this needs to match the python version in the Pipfile (or find a good way to get pyenv installed)
  #         python-version: 3.9
  #     - name: Test with pipenv
  #       if: hashFiles('Pipfile') != ''
  #       run: |
  #         pip install pipenv
  #         pipenv sync --dev
  #         pipenv run python -m pytest -v
  #     - name: Test with poetry
  #       if: hashFiles('Pipfile') == ''
  #       run: |
  #         pip install poetry
  #         poetry install
  #         poetry run python -m pytest -v
